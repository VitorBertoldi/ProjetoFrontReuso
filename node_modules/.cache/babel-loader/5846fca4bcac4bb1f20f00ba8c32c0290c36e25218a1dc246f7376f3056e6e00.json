{"ast":null,"code":"var _jsxFileName = \"/Users/vitorbertoldi/Documents/PROGRAMACAO/GitHub/atividades-fisicas/src/components/RegistrarMeta.js\",\n  _s = $RefreshSig$();\n// src/components/RegistrarMeta.js\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistrarMeta = ({\n  idUsuarioFixo,\n  onMetaRegistered\n}) => {\n  _s();\n  const [tipoAtividade, setTipoAtividade] = useState('');\n  const [valorMeta, setValorMeta] = useState('');\n  const [dataInicial, setDataInicial] = useState('');\n  const [dataFinal, setDataFinal] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const novaMeta = {\n      id_usuario: idUsuarioFixo,\n      tipo_atividade: tipoAtividade,\n      valor_meta: valorMeta,\n      data_inicial: dataInicial,\n      data_final: dataFinal\n      // O status_meta não está mais fixo como \"ativo\"\n    };\n    try {\n      await axios.post('http://localhost:3000/api/metas', novaMeta);\n      onMetaRegistered(); // Chama a função para atualizar a lista de metas\n      setTipoAtividade('');\n      setValorMeta('');\n      setDataInicial('');\n      setDataFinal('');\n    } catch (error) {\n      console.error('Erro ao registrar meta:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mt-4\",\n      children: \"Registrar Meta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"tipoAtividade\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Tipo de Atividade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: tipoAtividade,\n          onChange: e => setTipoAtividade(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"valorMeta\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Valor da Meta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          value: valorMeta,\n          onChange: e => setValorMeta(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"dataInicial\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Data Inicial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"date\",\n          value: dataInicial,\n          onChange: e => setDataInicial(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"dataFinal\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Data Final\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"date\",\n          value: dataFinal,\n          onChange: e => setDataFinal(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Registrar Meta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistrarMeta, \"Uup5jP1S8o4SOzrfg74hZYz3R+w=\");\n_c = RegistrarMeta;\nexport default RegistrarMeta;\nvar _c;\n$RefreshReg$(_c, \"RegistrarMeta\");","map":{"version":3,"names":["React","useState","Form","Button","axios","jsxDEV","_jsxDEV","RegistrarMeta","idUsuarioFixo","onMetaRegistered","_s","tipoAtividade","setTipoAtividade","valorMeta","setValorMeta","dataInicial","setDataInicial","dataFinal","setDataFinal","handleSubmit","e","preventDefault","novaMeta","id_usuario","tipo_atividade","valor_meta","data_inicial","data_final","post","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","type","value","onChange","target","required","variant","_c","$RefreshReg$"],"sources":["/Users/vitorbertoldi/Documents/PROGRAMACAO/GitHub/atividades-fisicas/src/components/RegistrarMeta.js"],"sourcesContent":["// src/components/RegistrarMeta.js\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst RegistrarMeta = ({ idUsuarioFixo, onMetaRegistered }) => {\n  const [tipoAtividade, setTipoAtividade] = useState('');\n  const [valorMeta, setValorMeta] = useState('');\n  const [dataInicial, setDataInicial] = useState('');\n  const [dataFinal, setDataFinal] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const novaMeta = {\n      id_usuario: idUsuarioFixo,\n      tipo_atividade: tipoAtividade,\n      valor_meta: valorMeta,\n      data_inicial: dataInicial,\n      data_final: dataFinal,\n      // O status_meta não está mais fixo como \"ativo\"\n    };\n\n    try {\n      await axios.post('http://localhost:3000/api/metas', novaMeta); \n      onMetaRegistered(); // Chama a função para atualizar a lista de metas\n      setTipoAtividade('');\n      setValorMeta('');\n      setDataInicial('');\n      setDataFinal('');\n    } catch (error) {\n      console.error('Erro ao registrar meta:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2 className=\"text-center mt-4\">Registrar Meta</h2>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"tipoAtividade\">\n          <Form.Label>Tipo de Atividade</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={tipoAtividade}\n            onChange={(e) => setTipoAtividade(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group controlId=\"valorMeta\">\n          <Form.Label>Valor da Meta</Form.Label>\n          <Form.Control\n            type=\"number\"\n            value={valorMeta}\n            onChange={(e) => setValorMeta(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group controlId=\"dataInicial\">\n          <Form.Label>Data Inicial</Form.Label>\n          <Form.Control\n            type=\"date\"\n            value={dataInicial}\n            onChange={(e) => setDataInicial(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group controlId=\"dataFinal\">\n          <Form.Label>Data Final</Form.Label>\n          <Form.Control\n            type=\"date\"\n            value={dataFinal}\n            onChange={(e) => setDataFinal(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Registrar Meta\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default RegistrarMeta;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}