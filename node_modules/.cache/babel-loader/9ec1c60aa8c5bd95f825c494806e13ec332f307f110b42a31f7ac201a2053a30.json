{"ast":null,"code":"var _jsxFileName = \"/Users/vitorbertoldi/Documents/PROGRAMACAO/GitHub/atividades-fisicas/src/components/Relatorios.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ListGroup, Table } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Relatorios = ({\n  userId\n}) => {\n  _s();\n  const [atividades, setAtividades] = useState([]);\n  const [metas, setMetas] = useState([]);\n  const [relatorios, setRelatorios] = useState([]);\n  useEffect(() => {\n    // Função para buscar atividades e metas\n    const fetchAtividadesEMetas = async () => {\n      try {\n        // Fetch de atividades\n        const atividadesResponse = await axios.get('http://localhost:3000/api/atividades');\n        setAtividades(atividadesResponse.data);\n\n        // Fetch de metas do usuário\n        const metasResponse = await axios.get(`http://localhost:3000/api/metas/users/${userId}`);\n        setMetas(metasResponse.data);\n\n        // Processa os dados para criar os relatórios\n        processarRelatorios(atividadesResponse.data, metasResponse.data);\n      } catch (error) {\n        console.error(error);\n        console.error('Erro ao buscar atividades e metas:', error);\n      }\n    };\n    fetchAtividadesEMetas();\n  }, [userId]);\n\n  // Função para processar os relatórios\n  const processarRelatorios = (atividades, metas) => {\n    const relatorioAgrupado = metas.map(meta => {\n      // Filtra atividades que correspondem ao tipo da meta\n      const atividadesCorrespondentes = atividades.filter(atividade => atividade.tipoAtividade === meta.tipo_atividade);\n\n      // Soma a distância total das atividades correspondentes\n      const totalDistancia = atividadesCorrespondentes.reduce((acc, atividade) => acc + atividade.distancia, 0);\n\n      // Calcula o quanto falta para atingir a meta\n      const faltaParaMeta = meta.valor_meta - totalDistancia;\n      return {\n        tipoAtividade: meta.tipo_atividade,\n        valorMeta: meta.valor_meta,\n        totalDistancia,\n        faltaParaMeta: faltaParaMeta > 0 ? faltaParaMeta : 0 // Se já atingiu a meta, mostra 0\n      };\n    });\n    setRelatorios(relatorioAgrupado);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Relat\\xF3rios de Metas e Atividades\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tipo de Atividade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Meta (km)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Percorrido (km)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Falta para a Meta (km)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: relatorios.map((relatorio, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: relatorio.tipoAtividade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: relatorio.valorMeta\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: relatorio.totalDistancia\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: relatorio.faltaParaMeta\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Relatorios, \"WzJkbFpMwMzZSgoW7uWiXt1yrWA=\");\n_c = Relatorios;\nexport default Relatorios;\nvar _c;\n$RefreshReg$(_c, \"Relatorios\");","map":{"version":3,"names":["React","useState","useEffect","ListGroup","Table","axios","jsxDEV","_jsxDEV","Relatorios","userId","_s","atividades","setAtividades","metas","setMetas","relatorios","setRelatorios","fetchAtividadesEMetas","atividadesResponse","get","data","metasResponse","processarRelatorios","error","console","relatorioAgrupado","map","meta","atividadesCorrespondentes","filter","atividade","tipoAtividade","tipo_atividade","totalDistancia","reduce","acc","distancia","faltaParaMeta","valor_meta","valorMeta","children","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","relatorio","index","_c","$RefreshReg$"],"sources":["/Users/vitorbertoldi/Documents/PROGRAMACAO/GitHub/atividades-fisicas/src/components/Relatorios.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ListGroup, Table } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst Relatorios = ({ userId }) => {\n  const [atividades, setAtividades] = useState([]);\n  const [metas, setMetas] = useState([]);\n  const [relatorios, setRelatorios] = useState([]);\n\n  useEffect(() => {\n    // Função para buscar atividades e metas\n    const fetchAtividadesEMetas = async () => {\n      try {\n        // Fetch de atividades\n        const atividadesResponse = await axios.get('http://localhost:3000/api/atividades');\n        setAtividades(atividadesResponse.data);\n\n        // Fetch de metas do usuário\n        const metasResponse = await axios.get(`http://localhost:3000/api/metas/users/${userId}`);\n        setMetas(metasResponse.data);\n\n        // Processa os dados para criar os relatórios\n        processarRelatorios(atividadesResponse.data, metasResponse.data);\n      } catch (error) {\n        console.error(error)\n        console.error('Erro ao buscar atividades e metas:', error);\n      }\n    };\n\n    fetchAtividadesEMetas();\n  }, [userId]);\n\n  // Função para processar os relatórios\n  const processarRelatorios = (atividades, metas) => {\n    const relatorioAgrupado = metas.map((meta) => {\n      // Filtra atividades que correspondem ao tipo da meta\n      const atividadesCorrespondentes = atividades.filter(\n        (atividade) => atividade.tipoAtividade === meta.tipo_atividade\n      );\n\n      // Soma a distância total das atividades correspondentes\n      const totalDistancia = atividadesCorrespondentes.reduce(\n        (acc, atividade) => acc + atividade.distancia,\n        0\n      );\n\n      // Calcula o quanto falta para atingir a meta\n      const faltaParaMeta = meta.valor_meta - totalDistancia;\n\n      return {\n        tipoAtividade: meta.tipo_atividade,\n        valorMeta: meta.valor_meta,\n        totalDistancia,\n        faltaParaMeta: faltaParaMeta > 0 ? faltaParaMeta : 0, // Se já atingiu a meta, mostra 0\n      };\n    });\n\n    setRelatorios(relatorioAgrupado);\n  };\n\n  return (\n    <div>\n      <h2>Relatórios de Metas e Atividades</h2>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Tipo de Atividade</th>\n            <th>Meta (km)</th>\n            <th>Total Percorrido (km)</th>\n            <th>Falta para a Meta (km)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {relatorios.map((relatorio, index) => (\n            <tr key={index}>\n              <td>{relatorio.tipoAtividade}</td>\n              <td>{relatorio.valorMeta}</td>\n              <td>{relatorio.totalDistancia}</td>\n              <td>{relatorio.faltaParaMeta}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default Relatorios;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}