{"ast":null,"code":"var _jsxFileName = \"/Users/vitorbertoldi/Documents/PROGRAMACAO/GitHub/atividades-fisicas/src/components/Metas.js\",\n  _s = $RefreshSig$();\n// src/components/Metas.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport RegistrarMeta from './RegistrarMeta';\nimport ListaMetas from './ListaMetas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Metas = () => {\n  _s();\n  const [metas, setMetas] = useState([]);\n  const [exibirRegistro, setExibirRegistro] = useState(false);\n  const idUsuarioFixo = '67166256a7b695a9778513a2';\n  useEffect(() => {\n    fetchMetas();\n  }, []);\n  const fetchMetas = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3000/api/metas/user/${idUsuarioFixo}`);\n      setMetas(response.data);\n    } catch (error) {\n      console.error('Erro ao buscar metas:', error);\n    }\n  };\n  const excluirMeta = async metaId => {\n    try {\n      await axios.delete(`http://localhost:3000/api/metas/${metaId}`);\n      setMetas(metas.filter(meta => meta._id !== metaId));\n    } catch (error) {\n      console.error('Erro ao excluir meta:', error);\n    }\n  };\n  const irParaRegistrarMeta = () => {\n    setExibirRegistro(true);\n  };\n  const voltarParaMetas = () => {\n    setExibirRegistro(false);\n    fetchMetas();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: exibirRegistro ? /*#__PURE__*/_jsxDEV(RegistrarMeta, {\n      idUsuarioFixo: idUsuarioFixo,\n      onMetaRegistered: voltarParaMetas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ListaMetas, {\n      metas: metas,\n      excluirMeta: excluirMeta,\n      onRegistrarNovaMeta: irParaRegistrarMeta\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Metas, \"dF6xKMhLTeWeJoNjxjBdwZngMPY=\");\n_c = Metas;\nexport default Metas;\nvar _c;\n$RefreshReg$(_c, \"Metas\");","map":{"version":3,"names":["React","useState","useEffect","axios","RegistrarMeta","ListaMetas","jsxDEV","_jsxDEV","Metas","_s","metas","setMetas","exibirRegistro","setExibirRegistro","idUsuarioFixo","fetchMetas","response","get","data","error","console","excluirMeta","metaId","delete","filter","meta","_id","irParaRegistrarMeta","voltarParaMetas","children","onMetaRegistered","fileName","_jsxFileName","lineNumber","columnNumber","onRegistrarNovaMeta","_c","$RefreshReg$"],"sources":["/Users/vitorbertoldi/Documents/PROGRAMACAO/GitHub/atividades-fisicas/src/components/Metas.js"],"sourcesContent":["// src/components/Metas.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport RegistrarMeta from './RegistrarMeta';\nimport ListaMetas from './ListaMetas';\n\nconst Metas = () => {\n  const [metas, setMetas] = useState([]);\n  const [exibirRegistro, setExibirRegistro] = useState(false);\n\n  const idUsuarioFixo = '67166256a7b695a9778513a2'; \n\n  useEffect(() => {\n    fetchMetas();\n  }, []);\n\n  const fetchMetas = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3000/api/metas/user/${idUsuarioFixo}`);\n      setMetas(response.data);\n    } catch (error) {\n      console.error('Erro ao buscar metas:', error);\n    }\n  };\n\n  const excluirMeta = async (metaId) => {\n    try {\n      await axios.delete(`http://localhost:3000/api/metas/${metaId}`); \n      setMetas(metas.filter((meta) => meta._id !== metaId)); \n    } catch (error) {\n      console.error('Erro ao excluir meta:', error);\n    }\n  };\n\n  const irParaRegistrarMeta = () => {\n    setExibirRegistro(true); \n  };\n\n  const voltarParaMetas = () => {\n    setExibirRegistro(false); \n    fetchMetas(); \n  };\n\n  return (\n    <div>\n      {exibirRegistro ? (\n        <RegistrarMeta idUsuarioFixo={idUsuarioFixo} onMetaRegistered={voltarParaMetas} />\n      ) : (\n        <ListaMetas metas={metas} excluirMeta={excluirMeta} onRegistrarNovaMeta={irParaRegistrarMeta} />\n      )}\n    </div>\n  );\n};\n\nexport default Metas;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMa,aAAa,GAAG,0BAA0B;EAEhDZ,SAAS,CAAC,MAAM;IACda,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,wCAAwCH,aAAa,EAAE,CAAC;MACzFH,QAAQ,CAACK,QAAQ,CAACE,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAME,WAAW,GAAG,MAAOC,MAAM,IAAK;IACpC,IAAI;MACF,MAAMnB,KAAK,CAACoB,MAAM,CAAC,mCAAmCD,MAAM,EAAE,CAAC;MAC/DX,QAAQ,CAACD,KAAK,CAACc,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKJ,MAAM,CAAC,CAAC;IACvD,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAMQ,mBAAmB,GAAGA,CAAA,KAAM;IAChCd,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMe,eAAe,GAAGA,CAAA,KAAM;IAC5Bf,iBAAiB,CAAC,KAAK,CAAC;IACxBE,UAAU,CAAC,CAAC;EACd,CAAC;EAED,oBACER,OAAA;IAAAsB,QAAA,EACGjB,cAAc,gBACbL,OAAA,CAACH,aAAa;MAACU,aAAa,EAAEA,aAAc;MAACgB,gBAAgB,EAAEF;IAAgB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAElF3B,OAAA,CAACF,UAAU;MAACK,KAAK,EAAEA,KAAM;MAACW,WAAW,EAAEA,WAAY;MAACc,mBAAmB,EAAER;IAAoB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAChG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzB,EAAA,CA9CID,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AAgDX,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}