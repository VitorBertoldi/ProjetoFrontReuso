{"ast":null,"code":"var _jsxFileName = \"/Users/vitorbertoldi/Documents/PROGRAMACAO/GitHub/atividades-fisicas/src/components/Metas.js\",\n  _s = $RefreshSig$();\n// src/components/Metas.js\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport RegistrarMeta from './RegistrarMeta';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Metas() {\n  _s();\n  const [metas, setMetas] = useState([]);\n  const [exibirRegistro, setExibirRegistro] = useState(false); // Estado para controlar a exibição do formulário\n\n  useEffect(() => {\n    fetchMetas();\n  }, []);\n  const fetchMetas = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/metas');\n      setMetas(response.data);\n    } catch (error) {\n      console.error('Erro ao buscar metas:', error);\n    }\n  };\n  const excluirMeta = async metaId => {\n    try {\n      await axios.delete(`http://localhost:3000/api/metas/users/${metaId}`);\n      setMetas(metas.filter(meta => meta._id !== metaId));\n    } catch (error) {\n      console.error('Erro ao excluir meta:', error);\n    }\n  };\n  const irParaRegistrarMeta = () => {\n    setExibirRegistro(true); // Exibe o formulário de registro\n  };\n  const voltarParaMetas = () => {\n    setExibirRegistro(false); // Volta para a lista de metas\n    fetchMetas(); // Atualiza a lista de metas após o registro\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !exibirRegistro ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mt-4\",\n        children: \"Metas Registradas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: irParaRegistrarMeta,\n        variant: \"success\",\n        className: \"mb-3\",\n        children: \"Registrar Nova Meta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tipo de Atividade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Valor da Meta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Data Inicial\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Data Final\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status da Meta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"A\\xE7\\xF5es\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: metas.map(meta => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: meta.tipo_atividade\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: meta.valor_meta\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(meta.data_inicial).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(meta.data_final).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: meta.status_meta\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                onClick: () => excluirMeta(meta._id),\n                children: \"Excluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)]\n          }, meta._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(RegistrarMeta, {\n      voltarParaMetas: voltarParaMetas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Metas, \"dF6xKMhLTeWeJoNjxjBdwZngMPY=\");\n_c = Metas;\nexport default Metas;\nvar _c;\n$RefreshReg$(_c, \"Metas\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","axios","RegistrarMeta","jsxDEV","_jsxDEV","Fragment","_Fragment","Metas","_s","metas","setMetas","exibirRegistro","setExibirRegistro","fetchMetas","response","get","data","error","console","excluirMeta","metaId","delete","filter","meta","_id","irParaRegistrarMeta","voltarParaMetas","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","striped","bordered","hover","map","tipo_atividade","valor_meta","Date","data_inicial","toLocaleDateString","data_final","status_meta","_c","$RefreshReg$"],"sources":["/Users/vitorbertoldi/Documents/PROGRAMACAO/GitHub/atividades-fisicas/src/components/Metas.js"],"sourcesContent":["// src/components/Metas.js\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport RegistrarMeta from './RegistrarMeta';\n\nfunction Metas() {\n  const [metas, setMetas] = useState([]);\n  const [exibirRegistro, setExibirRegistro] = useState(false); // Estado para controlar a exibição do formulário\n\n  useEffect(() => {\n    fetchMetas();\n  }, []);\n\n  const fetchMetas = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/metas');\n      setMetas(response.data);\n    } catch (error) {\n      console.error('Erro ao buscar metas:', error);\n    }\n  };\n\n  const excluirMeta = async (metaId) => {\n    try {\n      await axios.delete(`http://localhost:3000/api/metas/users/${metaId}`);\n      setMetas(metas.filter((meta) => meta._id !== metaId)); \n    } catch (error) {\n      console.error('Erro ao excluir meta:', error);\n    }\n  };\n\n  const irParaRegistrarMeta = () => {\n    setExibirRegistro(true); // Exibe o formulário de registro\n  };\n\n  const voltarParaMetas = () => {\n    setExibirRegistro(false); // Volta para a lista de metas\n    fetchMetas(); // Atualiza a lista de metas após o registro\n  };\n\n  return (\n    <div>\n      {!exibirRegistro ? (\n        <>\n          <h2 className=\"text-center mt-4\">Metas Registradas</h2>\n          <Button onClick={irParaRegistrarMeta} variant=\"success\" className=\"mb-3\">\n            Registrar Nova Meta\n          </Button>\n          <Table striped bordered hover>\n            <thead>\n              <tr>\n                <th>Tipo de Atividade</th>\n                <th>Valor da Meta</th>\n                <th>Data Inicial</th>\n                <th>Data Final</th>\n                <th>Status da Meta</th>\n                <th>Ações</th>\n              </tr>\n            </thead>\n            <tbody>\n              {metas.map((meta) => (\n                <tr key={meta._id}>\n                  <td>{meta.tipo_atividade}</td>\n                  <td>{meta.valor_meta}</td>\n                  <td>{new Date(meta.data_inicial).toLocaleDateString()}</td>\n                  <td>{new Date(meta.data_final).toLocaleDateString()}</td>\n                  <td>{meta.status_meta}</td>\n                  <td>\n                    <Button variant=\"danger\" onClick={() => excluirMeta(meta._id)}>\n                      Excluir\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </>\n      ) : (\n        <RegistrarMeta voltarParaMetas={voltarParaMetas} />\n      )}\n    </div>\n  );\n}\n\nexport default Metas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}