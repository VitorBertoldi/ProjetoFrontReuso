{"ast":null,"code":"var _jsxFileName = \"/Users/vitorbertoldi/Documents/PROGRAMACAO/GitHub/atividades-fisicas/src/components/Relatorios.js\",\n  _s = $RefreshSig$();\n// src/components/Relatorios.js\nimport React, { useEffect, useState } from 'react';\nimport { ListGroup, Spinner } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Relatorios = () => {\n  _s();\n  const [atividades, setAtividades] = useState([]);\n  const [metas, setMetas] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const userId = '67166256a7b695a9778513a2'; // ID fixo do usuário\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const atividadesResponse = await axios.get(`http://localhost:3000/api/atividades`); // Substitua pela sua URL da API\n        const metasResponse = await axios.get(`http://localhost:3000/api/metas/users/${userId}`);\n        setAtividades(atividadesResponse.data);\n        setMetas(metasResponse.data);\n      } catch (error) {\n        console.error('Erro ao buscar atividades e metas:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Agrupar atividades por tipo\n  const atividadesAgrupadas = atividades.reduce((acc, atividade) => {\n    const {\n      tipoAtividade,\n      distancia\n    } = atividade;\n    if (!acc[tipoAtividade]) {\n      acc[tipoAtividade] = {\n        totalDistancia: 0,\n        atividades: []\n      };\n    }\n    acc[tipoAtividade].totalDistancia += distancia;\n    acc[tipoAtividade].atividades.push(atividade);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Relat\\xF3rios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: metas.map(meta => {\n        const {\n          tipo_atividade,\n          valor_meta\n        } = meta;\n        const {\n          totalDistancia,\n          atividades\n        } = atividadesAgrupadas[tipo_atividade] || {\n          totalDistancia: 0,\n          atividades: []\n        };\n        const restante = valor_meta - totalDistancia;\n        return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [`Tipo de Atividade: ${tipo_atividade} - Distância Total Percorrida: ${totalDistancia} km - Meta: ${valor_meta} km - Restante para a Meta: ${restante < 0 ? 0 : restante} km`, /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: atividades.map(atividade => {\n              return atividade.tipoAtividade === tipo_atividade ? /*#__PURE__*/_jsxDEV(\"li\", {\n                children: `Data: ${new Date(atividade.dataAtividade).toLocaleDateString()} - Distância: ${atividade.distancia} km`\n              }, atividade._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this) : null;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, tipo_atividade, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Relatorios, \"bUI+09h7NOk9S2ZHi/ZXVNb4boQ=\");\n_c = Relatorios;\nexport default Relatorios;\nvar _c;\n$RefreshReg$(_c, \"Relatorios\");","map":{"version":3,"names":["React","useEffect","useState","ListGroup","Spinner","axios","jsxDEV","_jsxDEV","Relatorios","_s","atividades","setAtividades","metas","setMetas","loading","setLoading","userId","fetchData","atividadesResponse","get","metasResponse","data","error","console","animation","fileName","_jsxFileName","lineNumber","columnNumber","atividadesAgrupadas","reduce","acc","atividade","tipoAtividade","distancia","totalDistancia","push","children","map","meta","tipo_atividade","valor_meta","restante","Item","Date","dataAtividade","toLocaleDateString","_id","_c","$RefreshReg$"],"sources":["/Users/vitorbertoldi/Documents/PROGRAMACAO/GitHub/atividades-fisicas/src/components/Relatorios.js"],"sourcesContent":["// src/components/Relatorios.js\nimport React, { useEffect, useState } from 'react';\nimport { ListGroup, Spinner } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst Relatorios = () => {\n  const [atividades, setAtividades] = useState([]);\n  const [metas, setMetas] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const userId = '67166256a7b695a9778513a2'; // ID fixo do usuário\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const atividadesResponse = await axios.get(`http://localhost:3000/api/atividades`); // Substitua pela sua URL da API\n        const metasResponse = await axios.get(`http://localhost:3000/api/metas/users/${userId}`);\n        \n        setAtividades(atividadesResponse.data);\n        setMetas(metasResponse.data);\n      } catch (error) {\n        console.error('Erro ao buscar atividades e metas:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return <Spinner animation=\"border\" />;\n  }\n\n  // Agrupar atividades por tipo\n  const atividadesAgrupadas = atividades.reduce((acc, atividade) => {\n    const { tipoAtividade, distancia } = atividade;\n    if (!acc[tipoAtividade]) {\n      acc[tipoAtividade] = { totalDistancia: 0, atividades: [] };\n    }\n    acc[tipoAtividade].totalDistancia += distancia;\n    acc[tipoAtividade].atividades.push(atividade);\n    return acc;\n  }, {});\n\n  return (\n    <div>\n      <h2>Relatórios</h2>\n      <ListGroup>\n        {metas.map((meta) => {\n          const { tipo_atividade, valor_meta } = meta;\n          const { totalDistancia, atividades } = atividadesAgrupadas[tipo_atividade] || { totalDistancia: 0, atividades: [] };\n          const restante = valor_meta - totalDistancia;\n\n          return (\n            <ListGroup.Item key={tipo_atividade}>\n              {`Tipo de Atividade: ${tipo_atividade} - Distância Total Percorrida: ${totalDistancia} km - Meta: ${valor_meta} km - Restante para a Meta: ${restante < 0 ? 0 : restante} km`}\n              <ul>\n                {atividades.map((atividade) => {\n                  return atividade.tipoAtividade === tipo_atividade ? (\n                    <li key={atividade._id}>\n                      {`Data: ${new Date(atividade.dataAtividade).toLocaleDateString()} - Distância: ${atividade.distancia} km`}\n                    </li>\n                  ) : null;\n                })}\n              </ul>\n            </ListGroup.Item>\n          );\n        })}\n      </ListGroup>\n    </div>\n  );\n};\n\nexport default Relatorios;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}