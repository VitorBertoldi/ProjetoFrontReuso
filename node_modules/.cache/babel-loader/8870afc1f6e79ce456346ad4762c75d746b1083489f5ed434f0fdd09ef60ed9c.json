{"ast":null,"code":"var _jsxFileName = \"/Users/vitorbertoldi/Documents/PROGRAMACAO/GitHub/atividades-fisicas/src/components/Relatorios.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react'; // Removido ListGroup, pois não está sendo usado\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Relatorios = ({\n  userId\n}) => {\n  _s();\n  const [atividades, setAtividades] = useState([]);\n  const [metas, setMetas] = useState([]);\n  useEffect(() => {\n    const fetchAtividadesEMetas = async () => {\n      try {\n        // Fetch de atividades\n        const atividadesResponse = await axios.get('http://localhost:3000/api/atividades');\n        setAtividades(atividadesResponse.data);\n\n        // Fetch de metas do usuário\n        const metasResponse = await axios.get(`http://localhost:3000/api/metas/users/${userId}`);\n        setMetas(metasResponse.data);\n\n        // Processar os dados para criar os relatórios\n        processarRelatorios(atividadesResponse.data, metasResponse.data);\n      } catch (error) {\n        console.error('Erro ao buscar atividades e metas:', error);\n      }\n    };\n    fetchAtividadesEMetas();\n  }, [userId]);\n  const processarRelatorios = (atividades, metas) => {\n    // Exemplo de processamento básico de dados\n    const relatorios = metas.map(meta => {\n      const atividadesAgrupadas = atividades.filter(atividade => atividade.tipoAtividade === meta.tipo_atividade);\n      const totalDistancia = atividadesAgrupadas.reduce((acc, atividade) => acc + atividade.distancia, 0);\n      const restante = meta.valor_meta - totalDistancia;\n      return {\n        tipoAtividade: meta.tipo_atividade,\n        valorMeta: meta.valor_meta,\n        totalDistancia,\n        restante\n      };\n    });\n    return relatorios;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Relat\\xF3rios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), metas.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: metas.map((meta, index) => {\n        const atividadesMeta = atividades.filter(atividade => atividade.tipoAtividade === meta.tipo_atividade);\n        const totalDistancia = atividadesMeta.reduce((acc, atividade) => acc + atividade.distancia, 0);\n        const restante = meta.valor_meta - totalDistancia;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [meta.tipo_atividade, \": \", totalDistancia, \" km de \", meta.valor_meta, \" km percorridos. Falta: \", restante, \" km.\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando relat\\xF3rios...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Relatorios, \"FoYww5Tud9VCSVITDlo0ZLmZAc0=\");\n_c = Relatorios;\nexport default Relatorios;\nvar _c;\n$RefreshReg$(_c, \"Relatorios\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Relatorios","userId","_s","atividades","setAtividades","metas","setMetas","fetchAtividadesEMetas","atividadesResponse","get","data","metasResponse","processarRelatorios","error","console","relatorios","map","meta","atividadesAgrupadas","filter","atividade","tipoAtividade","tipo_atividade","totalDistancia","reduce","acc","distancia","restante","valor_meta","valorMeta","children","fileName","_jsxFileName","lineNumber","columnNumber","length","index","atividadesMeta","_c","$RefreshReg$"],"sources":["/Users/vitorbertoldi/Documents/PROGRAMACAO/GitHub/atividades-fisicas/src/components/Relatorios.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'; // Removido ListGroup, pois não está sendo usado\nimport axios from 'axios';\n\nconst Relatorios = ({ userId }) => {\n  const [atividades, setAtividades] = useState([]);\n  const [metas, setMetas] = useState([]);\n\n  useEffect(() => {\n    const fetchAtividadesEMetas = async () => {\n      try {\n        // Fetch de atividades\n        const atividadesResponse = await axios.get('http://localhost:3000/api/atividades');\n        setAtividades(atividadesResponse.data);\n\n        // Fetch de metas do usuário\n        const metasResponse = await axios.get(`http://localhost:3000/api/metas/users/${userId}`);\n        setMetas(metasResponse.data);\n\n        // Processar os dados para criar os relatórios\n        processarRelatorios(atividadesResponse.data, metasResponse.data);\n      } catch (error) {\n        console.error('Erro ao buscar atividades e metas:', error);\n      }\n    };\n\n    fetchAtividadesEMetas();\n  }, [userId]);\n\n  const processarRelatorios = (atividades, metas) => {\n    // Exemplo de processamento básico de dados\n    const relatorios = metas.map(meta => {\n      const atividadesAgrupadas = atividades.filter(atividade => atividade.tipoAtividade === meta.tipo_atividade);\n      const totalDistancia = atividadesAgrupadas.reduce((acc, atividade) => acc + atividade.distancia, 0);\n      const restante = meta.valor_meta - totalDistancia;\n\n      return {\n        tipoAtividade: meta.tipo_atividade,\n        valorMeta: meta.valor_meta,\n        totalDistancia,\n        restante,\n      };\n    });\n\n    return relatorios;\n  };\n\n  return (\n    <div>\n      <h2>Relatórios</h2>\n      {metas.length > 0 ? (\n        <ul>\n          {metas.map((meta, index) => {\n            const atividadesMeta = atividades.filter(atividade => atividade.tipoAtividade === meta.tipo_atividade);\n            const totalDistancia = atividadesMeta.reduce((acc, atividade) => acc + atividade.distancia, 0);\n            const restante = meta.valor_meta - totalDistancia;\n\n            return (\n              <li key={index}>\n                {meta.tipo_atividade}: {totalDistancia} km de {meta.valor_meta} km percorridos. Falta: {restante} km.\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>Carregando relatórios...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Relatorios;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}