{"ast":null,"code":"var _jsxFileName = \"/Users/vitorbertoldi/Documents/PROGRAMACAO/GitHub/atividades-fisicas/src/components/Metas.js\",\n  _s = $RefreshSig$();\n// src/components/Metas.js\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, ListGroup } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Metas = () => {\n  _s();\n  const [meta, setMeta] = useState({\n    tipo_atividade: '',\n    valor_meta: '',\n    data_inicial: '',\n    data_final: '',\n    status_meta: 'ativo' // O status da meta será sempre \"ativo\"\n  });\n  const [metas, setMetas] = useState([]);\n\n  // Função para buscar metas da API\n  const fetchMetas = async () => {\n    try {\n      const userId = '67166256a7b695a9778513a2'; // ID fixo\n      const response = await axios.get(`http://localhost:3000/api/metas/${userId}`); // URL com o ID do usuário\n      setMetas(response.data);\n    } catch (error) {\n      console.error('Erro ao buscar metas:', error);\n    }\n  };\n  useEffect(() => {\n    fetchMetas();\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setMeta(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Enviar dados para a API para registrar a nova meta\n      await axios.post('http://localhost:3000/api/metas', {\n        ...meta,\n        id_usuario: '67166256a7b695a9778513a2' // ID fixo\n      }); // Substitua pela URL da sua API\n      fetchMetas(); // Atualiza a lista de metas\n      // Limpa os campos do formulário\n      setMeta({\n        tipo_atividade: '',\n        valor_meta: '',\n        data_inicial: '',\n        data_final: '',\n        status_meta: 'ativo'\n      });\n    } catch (error) {\n      console.error('Erro ao registrar meta:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registrar Meta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Tipo de Atividade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"tipo_atividade\",\n          value: meta.tipo_atividade,\n          onChange: handleChange,\n          placeholder: \"Digite o tipo de atividade\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Valor da Meta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          name: \"valor_meta\",\n          value: meta.valor_meta,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Data Inicial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"date\",\n          name: \"data_inicial\",\n          value: meta.data_inicial,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Data Final\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"date\",\n          name: \"data_final\",\n          value: meta.data_final,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Adicionar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-4\",\n      children: \"Metas Registradas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      className: \"mt-3\",\n      children: metas.map((item, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: `Atividade: ${item.tipo_atividade} - Meta: ${item.valor_meta} - De: ${item.data_inicial} até: ${item.data_final} - Status: ${item.status_meta}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Metas, \"X5VOD6jHkmssI45/4doNu2SMLi4=\");\n_c = Metas;\nexport default Metas;\nvar _c;\n$RefreshReg$(_c, \"Metas\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","ListGroup","axios","jsxDEV","_jsxDEV","Metas","_s","meta","setMeta","tipo_atividade","valor_meta","data_inicial","data_final","status_meta","metas","setMetas","fetchMetas","userId","response","get","data","error","console","handleChange","e","name","value","target","prevState","handleSubmit","preventDefault","post","id_usuario","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","Label","Control","type","onChange","placeholder","required","className","map","item","index","Item","_c","$RefreshReg$"],"sources":["/Users/vitorbertoldi/Documents/PROGRAMACAO/GitHub/atividades-fisicas/src/components/Metas.js"],"sourcesContent":["// src/components/Metas.js\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, ListGroup } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst Metas = () => {\n  const [meta, setMeta] = useState({\n    tipo_atividade: '',\n    valor_meta: '',\n    data_inicial: '',\n    data_final: '',\n    status_meta: 'ativo', // O status da meta será sempre \"ativo\"\n  });\n  \n  const [metas, setMetas] = useState([]);\n\n  // Função para buscar metas da API\n  const fetchMetas = async () => {\n    try {\n      const userId = '67166256a7b695a9778513a2'; // ID fixo\n      const response = await axios.get(`http://localhost:3000/api/metas/${userId}`); // URL com o ID do usuário\n      setMetas(response.data);\n    } catch (error) {\n      console.error('Erro ao buscar metas:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchMetas();\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setMeta((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      // Enviar dados para a API para registrar a nova meta\n      await axios.post('http://localhost:3000/api/metas', {\n        ...meta,\n        id_usuario: '67166256a7b695a9778513a2', // ID fixo\n      }); // Substitua pela URL da sua API\n      fetchMetas(); // Atualiza a lista de metas\n      // Limpa os campos do formulário\n      setMeta({ tipo_atividade: '', valor_meta: '', data_inicial: '', data_final: '', status_meta: 'ativo' });\n    } catch (error) {\n      console.error('Erro ao registrar meta:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Registrar Meta</h2>\n      <Form onSubmit={handleSubmit}>\n        {/* O campo ID do Usuário foi removido */}\n        <Form.Group>\n          <Form.Label>Tipo de Atividade</Form.Label>\n          <Form.Control \n            type=\"text\" \n            name=\"tipo_atividade\" \n            value={meta.tipo_atividade} \n            onChange={handleChange} \n            placeholder=\"Digite o tipo de atividade\" \n            required \n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Valor da Meta</Form.Label>\n          <Form.Control \n            type=\"number\" \n            name=\"valor_meta\" \n            value={meta.valor_meta} \n            onChange={handleChange} \n            required \n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Data Inicial</Form.Label>\n          <Form.Control \n            type=\"date\" \n            name=\"data_inicial\" \n            value={meta.data_inicial} \n            onChange={handleChange} \n            required \n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Data Final</Form.Label>\n          <Form.Control \n            type=\"date\" \n            name=\"data_final\" \n            value={meta.data_final} \n            onChange={handleChange} \n            required \n          />\n        </Form.Group>\n        {/* O status da meta é sempre \"ativo\", portanto não há campo para ele */}\n        <Button type=\"submit\">Adicionar</Button>\n      </Form>\n\n      <h2 className=\"mt-4\">Metas Registradas</h2>\n      <ListGroup className=\"mt-3\">\n        {metas.map((item, index) => (\n          <ListGroup.Item key={index}>\n            {`Atividade: ${item.tipo_atividade} - Meta: ${item.valor_meta} - De: ${item.data_inicial} até: ${item.data_final} - Status: ${item.status_meta}`}\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n    </div>\n  );\n};\n\nexport default Metas;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,MAAM,EAAEC,SAAS,QAAQ,iBAAiB;AACzD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC;IAC/BY,cAAc,EAAE,EAAE;IAClBC,UAAU,EAAE,EAAE;IACdC,YAAY,EAAE,EAAE;IAChBC,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE,OAAO,CAAE;EACxB,CAAC,CAAC;EAEF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMmB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,MAAM,GAAG,0BAA0B,CAAC,CAAC;MAC3C,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,mCAAmCF,MAAM,EAAE,CAAC,CAAC,CAAC;MAC/EF,QAAQ,CAACG,QAAQ,CAACE,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACdkB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCnB,OAAO,CAAEoB,SAAS,KAAM;MACtB,GAAGA,SAAS;MACZ,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOL,CAAC,IAAK;IAChCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB,IAAI;MACF;MACA,MAAM5B,KAAK,CAAC6B,IAAI,CAAC,iCAAiC,EAAE;QAClD,GAAGxB,IAAI;QACPyB,UAAU,EAAE,0BAA0B,CAAE;MAC1C,CAAC,CAAC,CAAC,CAAC;MACJhB,UAAU,CAAC,CAAC,CAAC,CAAC;MACd;MACAR,OAAO,CAAC;QAAEC,cAAc,EAAE,EAAE;QAAEC,UAAU,EAAE,EAAE;QAAEC,YAAY,EAAE,EAAE;QAAEC,UAAU,EAAE,EAAE;QAAEC,WAAW,EAAE;MAAQ,CAAC,CAAC;IACzG,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,oBACEjB,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBjC,OAAA,CAACL,IAAI;MAACuC,QAAQ,EAAET,YAAa;MAAAI,QAAA,gBAE3B7B,OAAA,CAACL,IAAI,CAACwC,KAAK;QAAAN,QAAA,gBACT7B,OAAA,CAACL,IAAI,CAACyC,KAAK;UAAAP,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC1CjC,OAAA,CAACL,IAAI,CAAC0C,OAAO;UACXC,IAAI,EAAC,MAAM;UACXjB,IAAI,EAAC,gBAAgB;UACrBC,KAAK,EAAEnB,IAAI,CAACE,cAAe;UAC3BkC,QAAQ,EAAEpB,YAAa;UACvBqB,WAAW,EAAC,4BAA4B;UACxCC,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC,eACbjC,OAAA,CAACL,IAAI,CAACwC,KAAK;QAAAN,QAAA,gBACT7B,OAAA,CAACL,IAAI,CAACyC,KAAK;UAAAP,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACtCjC,OAAA,CAACL,IAAI,CAAC0C,OAAO;UACXC,IAAI,EAAC,QAAQ;UACbjB,IAAI,EAAC,YAAY;UACjBC,KAAK,EAAEnB,IAAI,CAACG,UAAW;UACvBiC,QAAQ,EAAEpB,YAAa;UACvBsB,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC,eACbjC,OAAA,CAACL,IAAI,CAACwC,KAAK;QAAAN,QAAA,gBACT7B,OAAA,CAACL,IAAI,CAACyC,KAAK;UAAAP,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACrCjC,OAAA,CAACL,IAAI,CAAC0C,OAAO;UACXC,IAAI,EAAC,MAAM;UACXjB,IAAI,EAAC,cAAc;UACnBC,KAAK,EAAEnB,IAAI,CAACI,YAAa;UACzBgC,QAAQ,EAAEpB,YAAa;UACvBsB,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC,eACbjC,OAAA,CAACL,IAAI,CAACwC,KAAK;QAAAN,QAAA,gBACT7B,OAAA,CAACL,IAAI,CAACyC,KAAK;UAAAP,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACnCjC,OAAA,CAACL,IAAI,CAAC0C,OAAO;UACXC,IAAI,EAAC,MAAM;UACXjB,IAAI,EAAC,YAAY;UACjBC,KAAK,EAAEnB,IAAI,CAACK,UAAW;UACvB+B,QAAQ,EAAEpB,YAAa;UACvBsB,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC,eAEbjC,OAAA,CAACJ,MAAM;QAAC0C,IAAI,EAAC,QAAQ;QAAAT,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eAEPjC,OAAA;MAAI0C,SAAS,EAAC,MAAM;MAAAb,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CjC,OAAA,CAACH,SAAS;MAAC6C,SAAS,EAAC,MAAM;MAAAb,QAAA,EACxBnB,KAAK,CAACiC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrB7C,OAAA,CAACH,SAAS,CAACiD,IAAI;QAAAjB,QAAA,EACZ,cAAce,IAAI,CAACvC,cAAc,YAAYuC,IAAI,CAACtC,UAAU,UAAUsC,IAAI,CAACrC,YAAY,SAASqC,IAAI,CAACpC,UAAU,cAAcoC,IAAI,CAACnC,WAAW;MAAE,GAD7HoC,KAAK;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA9GID,KAAK;AAAA8C,EAAA,GAAL9C,KAAK;AAgHX,eAAeA,KAAK;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}