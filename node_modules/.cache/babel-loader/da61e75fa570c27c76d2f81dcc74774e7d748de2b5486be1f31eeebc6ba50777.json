{"ast":null,"code":"var _jsxFileName = \"/Users/vitorbertoldi/Documents/PROGRAMACAO/GitHub/atividades-fisicas/src/components/Relatorios.js\",\n  _s = $RefreshSig$();\n// src/components/Relatorios.js\nimport React, { useEffect, useState } from 'react';\nimport { ListGroup, Spinner } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Relatorios = () => {\n  _s();\n  const [atividades, setAtividades] = useState([]);\n  const [metas, setMetas] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const userId = '67166256a7b695a9778513a2'; // ID fixo do usuário\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const atividadesResponse = await axios.get(`http://localhost:3000/api/atividades`); // Substitua pela sua URL da API\n        const metasResponse = await axios.get(`http://localhost:3000/api/metas/${userId}`);\n        setAtividades(atividadesResponse.data);\n        setMetas(metasResponse.data);\n      } catch (error) {\n        console.error('Erro ao buscar atividades e metas:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Relat\\xF3rios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Relat\\xF3rios de atividades e metas podem ser exibidos aqui.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Atividades Registradas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: atividades.map((atividade, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: `Tipo de Atividade: ${atividade.tipoAtividade} - Data: ${new Date(atividade.dataAtividade).toLocaleDateString()} - Duração: ${atividade.duracao} min - Distância: ${atividade.distancia} km`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Metas Registradas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: metas.map((meta, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: `Tipo de Atividade: ${meta.tipo_atividade} - Meta: ${meta.valor_meta} - De: ${new Date(meta.data_inicial).toLocaleDateString()} até: ${new Date(meta.data_final).toLocaleDateString()} - Status: ${meta.status_meta}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Relat\\xF3rio Cruzado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: metas.map((meta, metaIndex) => {\n        const atividadesFiltradas = atividades.filter(atividade => atividade.tipoAtividade === meta.tipo_atividade);\n        return atividadesFiltradas.length > 0 ? /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [`Meta: ${meta.valor_meta} - Tipo de Atividade: ${meta.tipo_atividade} - Atividades Registradas: ${atividadesFiltradas.length}`, /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: atividadesFiltradas.map((atividade, atividadeIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: `Data: ${new Date(atividade.dataAtividade).toLocaleDateString()} - Duração: ${atividade.duracao} min - Distância: ${atividade.distancia} km`\n            }, atividadeIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, metaIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: `Meta: ${meta.valor_meta} - Tipo de Atividade: ${meta.tipo_atividade} - Nenhuma atividade registrada`\n        }, metaIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Relatorios, \"bUI+09h7NOk9S2ZHi/ZXVNb4boQ=\");\n_c = Relatorios;\nexport default Relatorios;\nvar _c;\n$RefreshReg$(_c, \"Relatorios\");","map":{"version":3,"names":["React","useEffect","useState","ListGroup","Spinner","axios","jsxDEV","_jsxDEV","Relatorios","_s","atividades","setAtividades","metas","setMetas","loading","setLoading","userId","fetchData","atividadesResponse","get","metasResponse","data","error","console","animation","fileName","_jsxFileName","lineNumber","columnNumber","children","map","atividade","index","Item","tipoAtividade","Date","dataAtividade","toLocaleDateString","duracao","distancia","meta","tipo_atividade","valor_meta","data_inicial","data_final","status_meta","metaIndex","atividadesFiltradas","filter","length","atividadeIndex","_c","$RefreshReg$"],"sources":["/Users/vitorbertoldi/Documents/PROGRAMACAO/GitHub/atividades-fisicas/src/components/Relatorios.js"],"sourcesContent":["// src/components/Relatorios.js\nimport React, { useEffect, useState } from 'react';\nimport { ListGroup, Spinner } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst Relatorios = () => {\n  const [atividades, setAtividades] = useState([]);\n  const [metas, setMetas] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const userId = '67166256a7b695a9778513a2'; // ID fixo do usuário\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const atividadesResponse = await axios.get(`http://localhost:3000/api/atividades`); // Substitua pela sua URL da API\n        const metasResponse = await axios.get(`http://localhost:3000/api/metas/${userId}`);\n        \n        setAtividades(atividadesResponse.data);\n        setMetas(metasResponse.data);\n      } catch (error) {\n        console.error('Erro ao buscar atividades e metas:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return <Spinner animation=\"border\" />;\n  }\n\n  return (\n    <div>\n      <h2>Relatórios</h2>\n      <p>Relatórios de atividades e metas podem ser exibidos aqui.</p>\n\n      <h3>Atividades Registradas</h3>\n      <ListGroup>\n        {atividades.map((atividade, index) => (\n          <ListGroup.Item key={index}>\n            {`Tipo de Atividade: ${atividade.tipoAtividade} - Data: ${new Date(atividade.dataAtividade).toLocaleDateString()} - Duração: ${atividade.duracao} min - Distância: ${atividade.distancia} km`}\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n\n      <h3>Metas Registradas</h3>\n      <ListGroup>\n        {metas.map((meta, index) => (\n          <ListGroup.Item key={index}>\n            {`Tipo de Atividade: ${meta.tipo_atividade} - Meta: ${meta.valor_meta} - De: ${new Date(meta.data_inicial).toLocaleDateString()} até: ${new Date(meta.data_final).toLocaleDateString()} - Status: ${meta.status_meta}`}\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n\n      {/* Exemplo de cruzamento de informações */}\n      <h3>Relatório Cruzado</h3>\n      <ListGroup>\n        {metas.map((meta, metaIndex) => {\n          const atividadesFiltradas = atividades.filter(atividade => atividade.tipoAtividade === meta.tipo_atividade);\n          return atividadesFiltradas.length > 0 ? (\n            <ListGroup.Item key={metaIndex}>\n              {`Meta: ${meta.valor_meta} - Tipo de Atividade: ${meta.tipo_atividade} - Atividades Registradas: ${atividadesFiltradas.length}`}\n              <ul>\n                {atividadesFiltradas.map((atividade, atividadeIndex) => (\n                  <li key={atividadeIndex}>\n                    {`Data: ${new Date(atividade.dataAtividade).toLocaleDateString()} - Duração: ${atividade.duracao} min - Distância: ${atividade.distancia} km`}\n                  </li>\n                ))}\n              </ul>\n            </ListGroup.Item>\n          ) : (\n            <ListGroup.Item key={metaIndex}>\n              {`Meta: ${meta.valor_meta} - Tipo de Atividade: ${meta.tipo_atividade} - Nenhuma atividade registrada`}\n            </ListGroup.Item>\n          );\n        })}\n      </ListGroup>\n    </div>\n  );\n};\n\nexport default Relatorios;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}